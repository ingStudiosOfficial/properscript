{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "ProperScript",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#punctuation"
    },
    {
      "include": "#variables"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.properscript",
          "match": "\\b(whether|period|heretofore|changeover|goback|visit)\\b"
        },
        {
          "name": "storage.type.properscript",
          "match": "\\b(changeable|persistent|procedure)\\b"
        },
        {
          "name": "keyword.other.properscript",
          "match": "\\b(queue|please|acquire|announce|inform|blunder|sorry)\\b"
        },
        {
          "name": "constant.language.properscript",
          "match": "\\b(correct|mistaken)\\b"
        },
        {
          "name": "keyword.control.properscript",
          "match": "\\b(terribly sorry)\\b"
        },
        {
          "name": "keyword.control.js",
          "match": "\\b(async|await|break|case|catch|continue|debugger|default|do|else|export|extends|finally|for|from|if|import|return|switch|throw|try|while|yield)\\b"
        },
        {
          "name": "storage.type.js",
          "match": "\\b(const|let|var|function|class|enum|interface|type|namespace)\\b"
        },
        {
          "name": "storage.modifier.js",
          "match": "\\b(static|public|private|protected|readonly|abstract|async|get|set)\\b"
        },
        {
          "name": "keyword.operator.new.js",
          "match": "\\bnew\\b"
        },
        {
          "name": "keyword.operator.expression.js",
          "match": "\\b(typeof|instanceof|in|of|delete|void)\\b"
        },
        {
          "name": "variable.language.js",
          "match": "\\b(this|super|arguments)\\b"
        },
        {
          "name": "constant.language.js",
          "match": "\\b(true|false|null|undefined|NaN|Infinity)\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.properscript",
          "match": "\\b(procedure)\\s+([a-zA-Z_$][a-zA-Z0-9_$]*)\\b",
          "captures": {
            "1": {
              "name": "storage.type.properscript"
            },
            "2": {
              "name": "entity.name.function.properscript"
            }
          }
        },
        {
          "name": "entity.name.function.js",
          "match": "\\b(function)\\s+([a-zA-Z_$][a-zA-Z0-9_$]*)\\b",
          "captures": {
            "1": {
              "name": "storage.type.js"
            },
            "2": {
              "name": "entity.name.function.js"
            }
          }
        },
        {
          "name": "entity.name.function.properscript",
          "match": "\\b([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*(?=\\()",
          "captures": {
            "1": {
              "name": "entity.name.function.properscript"
            }
          }
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "match": "\\b(changeable|persistent)\\s+([a-zA-Z_$][a-zA-Z0-9_$]*)\\b",
          "captures": {
            "1": {
              "name": "storage.type.properscript"
            },
            "2": {
              "name": "variable.declaration.properscript"
            }
          }
        },
        {
          "match": "\\b(const|let|var)\\s+([a-zA-Z_$][a-zA-Z0-9_$]*)\\b",
          "captures": {
            "1": {
              "name": "storage.type.js"
            },
            "2": {
              "name": "variable.declaration.js"
            }
          }
        },
        {
          "name": "variable.other.readwrite.js",
          "match": "\\b[a-zA-Z_$][a-zA-Z0-9_$]*\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.js",
          "match": "=(?!=)|\\+=|-=|\\*=|/=|%=|\\*\\*=|<<=|>>=|>>>=|&=|\\|=|\\^="
        },
        {
          "name": "keyword.operator.comparison.js",
          "match": "===|!==|==|!=|<=|>=|<|>"
        },
        {
          "name": "keyword.operator.logical.js",
          "match": "&&|\\|\\||!"
        },
        {
          "name": "keyword.operator.arithmetic.js",
          "match": "\\+\\+|--|\\+|-|\\*|/|%|\\*\\*"
        },
        {
          "name": "keyword.operator.bitwise.js",
          "match": "&|\\||\\^|~|<<|>>|>>>"
        },
        {
          "name": "keyword.operator.ternary.js",
          "match": "\\?|:"
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.terminator.statement.js",
          "match": ";"
        },
        {
          "name": "punctuation.separator.comma.js",
          "match": ","
        },
        {
          "name": "punctuation.accessor.js",
          "match": "\\."
        },
        {
          "name": "meta.brace.round.js",
          "match": "\\(|\\)"
        },
        {
          "name": "meta.brace.square.js",
          "match": "\\[|\\]"
        },
        {
          "name": "meta.brace.curly.js",
          "match": "\\{|\\}"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.js",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.js",
              "match": "\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\\{[0-9A-Fa-f]+\\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)"
            }
          ]
        },
        {
          "name": "string.quoted.single.js",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.js",
              "match": "\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\\{[0-9A-Fa-f]+\\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)"
            }
          ]
        },
        {
          "name": "string.template.js",
          "begin": "`",
          "end": "`",
          "patterns": [
            {
              "name": "constant.character.escape.js",
              "match": "\\\\."
            },
            {
              "name": "meta.template.expression.js",
              "begin": "\\$\\{",
              "end": "\\}",
              "patterns": [
                {
                  "include": "$self"
                }
              ]
            }
          ]
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.js",
          "match": "//.*$"
        },
        {
          "name": "comment.block.js",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.hex.js",
          "match": "\\b0[xX][0-9a-fA-F]+\\b"
        },
        {
          "name": "constant.numeric.binary.js",
          "match": "\\b0[bB][01]+\\b"
        },
        {
          "name": "constant.numeric.octal.js",
          "match": "\\b0[oO][0-7]+\\b"
        },
        {
          "name": "constant.numeric.decimal.js",
          "match": "\\b\\d+(\\.\\d+)?([eE][+-]?\\d+)?\\b"
        }
      ]
    }
  },
  "scopeName": "source.properscript"
}